{"version":3,"sources":["Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["Pagination","total","perPage","page","useState","activePage","setActivePage","limit","setLimit","arrPages","Array","Math","ceil","fill","onPageChange","event","innerHTML","currentTarget","from","to","validationGoToRight","length","validationGoToLeft","onChange","target","value","defaultValue","className","type","onClick","disabled","hidden","map","_","index","visibleBtn","ind","classNames","App","ReactDOM","render","document","getElementById"],"mappings":"+OAyKeA,EA/JoB,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,KACpD,EAAoCC,mBAASD,GAA7C,mBAAOE,EAAP,KAAmBC,EAAnB,KACA,EAA0BF,mBAASF,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAEMC,EAAW,IAAIC,MAAMC,KAAKC,KAAKX,EAAQM,IAAQM,KAAK,IAEpDC,EAAe,SAACC,GACpB,IAAQC,EAAcD,EAAME,cAApBD,UAERV,GAAeU,IAWXE,EAAOb,EAAaE,EAAQA,EAAQ,EACpCY,EAAKd,EAAaE,EAAQN,EAAQA,EAAQI,EAAaE,EAEvDa,EAAsBf,EAAaE,EAAQE,EAASY,OACtDhB,EAAaE,EACbE,EAASY,OACPC,EAAqBjB,EAAaE,EAAQ,EAAI,EAAIF,EAAaE,EAErE,OACE,gCACE,4CACYW,EADZ,cACsBC,EADtB,eAC+BlB,KAG/B,yBACEsB,SAAU,SAACR,GACTP,GAAUO,EAAMS,OAAOC,OACvBnB,EAAc,IAEhBoB,aAAcnB,EALhB,UAOE,wBAAQkB,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,mBAGF,qBAAKE,UAAU,aAAf,SACE,qBAAIA,UAAU,mBAAd,UAEE,oBAAIA,UAAU,mBAAd,SACE,wBACEA,UAAU,kBACVC,KAAK,SACLC,QA1CK,WACfvB,EAAcD,EAAa,IA0CjByB,SAAyB,IAAfzB,EAJZ,oBAUF,oBAAIsB,UAAU,mBAAd,SACE,wBACEA,UAAU,kBACVC,KAAK,SACLG,OAAQ1B,GAAc,EACtBwB,QAAS,SAACd,GACRD,EAAaC,IALjB,iBAYF,oBAAIY,UAAU,mBAAd,SACE,wBACEA,UAAU,kBACVC,KAAK,SACLG,OAAQ1B,GAAc,EACtBwB,QAAS,WACPvB,EAAcgB,IALlB,mBAYDb,EAASuB,KAAI,SAACC,EAAGC,GAChB,IAAMC,EAAaD,IAAU7B,EAAa,GACrC6B,IAAU7B,EAAa,GACvB6B,IAAU7B,EAET+B,EAAMF,EAEZ,OACE,oBACEP,UAAU,mBAEVI,OAAQI,EAHV,SAKE,wBACER,UAAWU,IACT,kBACA,CAAE,uBAAwBhC,IAAe6B,EAAQ,IAEnDN,KAAK,SACLC,QAAS,SAACd,GACRD,EAAaC,IAPjB,SAUGmB,EAAQ,KAbNE,MAmBX,oBAAIT,UAAU,mBAAd,SACE,wBACEA,UAAU,kBACVC,KAAK,SACLG,OAAQ1B,GAAcI,EAASY,OAAS,EACxCQ,QAAS,WACPvB,EAAcc,IALlB,mBAYF,oBAAIO,UAAU,mBAAd,SACE,wBACEA,UAAU,kBACVC,KAAK,SACLG,OAAQ1B,GAAcI,EAASY,OAAS,EACxCQ,QAAS,SAACd,GACRD,EAAaC,IALjB,SAQGN,EAASY,WAId,oBAAIM,UAAU,mBAAd,SACE,wBACEA,UAAU,kBACVC,KAAK,SACLC,QAlIM,WAChBvB,EAAcD,EAAa,IAkIjByB,SAAUzB,IAAeI,EAASY,OAJpC,6BC5IGiB,EATO,WACpB,OACE,qCACE,4CACA,cAAC,EAAD,CAAYrC,MAAO,GAAIC,QAAS,EAAGC,KAAM,QCL/CoC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b811e85b.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport './Pagination.scss';\n\ninterface Data {\n  total: number;\n  perPage: number;\n  page: number;\n}\n\nconst Pagination: React.FC<Data> = ({ total, perPage, page }) => {\n  const [activePage, setActivePage] = useState(page);\n  const [limit, setLimit] = useState(perPage);\n\n  const arrPages = new Array(Math.ceil(total / limit)).fill('');\n\n  const onPageChange = (event: React.MouseEvent<HTMLButtonElement>): void => {\n    const { innerHTML } = event.currentTarget;\n\n    setActivePage(+innerHTML);\n  };\n\n  const goToLeft = () => {\n    setActivePage(activePage - 1);\n  };\n\n  const goToRight = () => {\n    setActivePage(activePage + 1);\n  };\n\n  const from = activePage * limit - limit + 1;\n  const to = activePage * limit > total ? total : activePage * limit;\n\n  const validationGoToRight = activePage + limit < arrPages.length\n    ? activePage + limit\n    : arrPages.length;\n  const validationGoToLeft = activePage - limit < 1 ? 1 : activePage - limit;\n\n  return (\n    <div>\n      <p>\n        {`info: ${from} - ${to} of ${total}`}\n      </p>\n\n      <select\n        onChange={(event) => {\n          setLimit(+event.target.value);\n          setActivePage(1);\n        }}\n        defaultValue={limit}\n      >\n        <option value=\"3\">3</option>\n        <option value=\"5\">5</option>\n        <option value=\"10\">10</option>\n        <option value=\"20\">20</option>\n      </select>\n\n      <nav className=\"pagination\">\n        <ul className=\"pagination__list\">\n\n          <li className=\"pagination__item\">\n            <button\n              className=\"pagination__btn\"\n              type=\"button\"\n              onClick={goToLeft}\n              disabled={activePage === 1}\n            >\n              &laquo;\n            </button>\n          </li>\n\n          <li className=\"pagination__item\">\n            <button\n              className=\"pagination__btn\"\n              type=\"button\"\n              hidden={activePage <= 2}\n              onClick={(event) => {\n                onPageChange(event);\n              }}\n            >\n              1\n            </button>\n          </li>\n\n          <li className=\"pagination__item\">\n            <button\n              className=\"pagination__btn\"\n              type=\"button\"\n              hidden={activePage <= 2}\n              onClick={() => {\n                setActivePage(validationGoToLeft);\n              }}\n            >\n              ...\n            </button>\n          </li>\n\n          {arrPages.map((_, index) => {\n            const visibleBtn = index !== activePage - 1\n              && index !== activePage - 2\n              && index !== activePage;\n\n            const ind = index;\n\n            return (\n              <li\n                className=\"pagination__item\"\n                key={ind}\n                hidden={visibleBtn}\n              >\n                <button\n                  className={classNames(\n                    'pagination__btn',\n                    { 'pagination__btn--act': activePage === index + 1 },\n                  )}\n                  type=\"button\"\n                  onClick={(event) => {\n                    onPageChange(event);\n                  }}\n                >\n                  {index + 1}\n                </button>\n              </li>\n            );\n          })}\n\n          <li className=\"pagination__item\">\n            <button\n              className=\"pagination__btn\"\n              type=\"button\"\n              hidden={activePage >= arrPages.length - 1}\n              onClick={() => {\n                setActivePage(validationGoToRight);\n              }}\n            >\n              ...\n            </button>\n          </li>\n\n          <li className=\"pagination__item\">\n            <button\n              className=\"pagination__btn\"\n              type=\"button\"\n              hidden={activePage >= arrPages.length - 1}\n              onClick={(event) => {\n                onPageChange(event);\n              }}\n            >\n              {arrPages.length}\n            </button>\n          </li>\n\n          <li className=\"pagination__item\">\n            <button\n              className=\"pagination__btn\"\n              type=\"button\"\n              onClick={goToRight}\n              disabled={activePage === arrPages.length}\n            >\n              &raquo;\n            </button>\n          </li>\n\n        </ul>\n      </nav>\n    </div>\n  );\n};\n\nexport default Pagination;\n","import React from 'react';\nimport './App.css';\nimport Pagination from './Pagination/Pagination';\n\nconst App: React.FC = () => {\n  return (\n    <>\n      <h1>Pagination</h1>\n      <Pagination total={42} perPage={5} page={1} />\n    </>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}